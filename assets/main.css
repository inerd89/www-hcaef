/* stylelint-disable */
/*! normalize.css v2.1.3 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

/**
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block;
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9.
 * Hide the `template` element in IE, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* ==========================================================================
   Base
   ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* ==========================================================================
   Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent;
}

/**
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* ==========================================================================
   Typography
   ========================================================================== */
/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}

/**
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap;
}

/**
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* ==========================================================================
   Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0;
}

/**
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden;
}

/* ==========================================================================
   Figures
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0;
}

/* ==========================================================================
   Forms
   ========================================================================== */
/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/* ==========================================================================
   Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

html {
  box-sizing: border-box;
  font-size: 12px;
}

html * {
  box-sizing: inherit;
  -webkit-font-smoothing: antialiased;
}

p, h1, h2, h3, h4, h5, h6 {
  margin: 0;
  padding: 0;
}

p {
  padding-bottom: 2rem;
}

p:last-of-type {
  padding-bottom: 0;
}

.typo--base, p, .typo--strong, .typo--large, .article-body h2, .typo--caption, .typo--button, .typo--nav-link, .typo--link, .typo--link--underline, .typo--link--dark {
  font-family: "Work Sans", Helvetica, Arial, sans-serif;
  font-size: 1.5rem;
  line-height: 2rem;
  letter-spacing: -0.0025em;
  margin-top: 0.5125rem;
  margin-bottom: -0.5125rem;
}

.typo--strong {
  font-weight: 600;
}

.typo--small, .panel__footnote {
  padding-top: 1rem;
  font-family: "Work Sans", Helvetica, Arial, sans-serif;
  font-size: 1.1667rem;
  line-height: 1.5rem;
  margin-top: 0.37082rem;
  margin-bottom: -0.37082rem;
}

.typo--large, .article-body h2 {
  font-size: 2rem;
  line-height: 2rem;
  letter-spacing: -0.33px;
  margin-top: 0.35rem;
  margin-bottom: -0.35rem;
}

.typo--caption {
  font-size: 1.33rem;
  line-height: 2rem;
  color: #686868;
  @inclue align-to-baseline( 1.33rem, 2rem, $worksans-cap-height);
}

.typo--title, .typo--page-title, .typo--section-title, .event-card__hed, .typo--small-section-title, .event-card--front-page .event-card__hed, .typo--article-title, .typo--small-article-title {
  font-family: "Volkhov", Georgia, Times, serif;
  font-weight: 700;
  line-height: 1;
}

.typo--page-title {
  font-size: 3rem;
  line-height: 3rem;
  margin-top: 0.525rem;
  margin-bottom: -0.525rem;
}

@media (min-width: 768px) {
  .typo--page-title {
    font-size: 4rem;
    line-height: 4rem;
    margin-top: 0.7rem;
    margin-bottom: -0.7rem;
  }
}

@media (min-width: 1024px) {
  .typo--page-title {
    font-size: 5rem;
    line-height: 5rem;
    margin-top: 0.875rem;
    margin-bottom: -0.875rem;
  }
}

.typo--section-title, .event-card__hed {
  font-size: 2rem;
  line-height: 2rem;
  margin-top: 0.35rem;
  margin-bottom: -0.35rem;
}

@media (min-width: 1024px) {
  .typo--section-title, .event-card__hed {
    font-size: 3rem;
    line-height: 3rem;
    margin-top: 0.525rem;
    margin-bottom: -0.525rem;
  }
}

.typo--small-section-title, .event-card--front-page .event-card__hed {
  font-size: 1.75rem;
  line-height: 2rem;
  margin-top: 0.43125rem;
  margin-bottom: -0.43125rem;
}

@media (min-width: 768px) {
  .typo--small-section-title, .event-card--front-page .event-card__hed {
    font-size: 2rem;
    line-height: 2rem;
    margin-top: 0.35rem;
    margin-bottom: -0.35rem;
  }
}

.typo--article-title {
  font-size: 3rem;
  line-height: 3rem;
  letter-spacing: -0.75px;
  margin-top: 0.525rem;
  margin-bottom: -0.525rem;
}

@media (min-width: 768px) {
  .typo--article-title {
    font-size: 4rem;
    line-height: 4rem;
    letter-spacing: -0.75px;
    margin-top: 0.7rem;
    margin-bottom: -0.7rem;
  }
}

.typo--small-article-title {
  font-size: 1.5rem;
  line-height: 1.75rem;
  margin-top: 0.3875rem;
  margin-bottom: -0.3875rem;
}

@media (min-width: 1024px) {
  .typo--small-article-title {
    font-size: 2rem;
    line-height: 2rem;
    margin-top: 0.35rem;
    margin-bottom: -0.35rem;
  }
}

.typo--nav-link {
  text-decoration: none;
  border-bottom: 2px solid transparent;
  transition: border-color .2s;
}

.typo--nav-link:hover {
  border-color: #282828;
}

.typo--link {
  text-decoration: none;
  color: #282828;
  transition: color .2s;
  mix-blend-mode: multiply;
  letter-spacing: -0.15px;
}

.typo--link:hover {
  color: #a8a8a8;
}

.typo--link--underline {
  color: #282828;
  transition: color .2s;
  mix-blend-mode: multiply;
}

.typo--link--underline:hover {
  color: #a8a8a8;
}

.typo--link--dark {
  text-decoration: none;
  color: #fff;
  transition: color .2s;
}

.typo--link--dark:hover {
  color: gray;
}

p > a {
  color: inherit;
  opacity: 1;
  transition: opacity 0.2s ease-out;
}

p > a:hover {
  opacity: 0.5;
}

.button {
  display: inline-block;
  padding: 1.5rem;
  border: 1px solid rgba(255, 255, 255, 0.2);
  background-color: transparent;
  color: #fff;
  text-decoration: none;
  transition: all 0.2s;
}

.button:hover {
  border-color: transparent;
  background-color: rgba(255, 255, 255, 0.1);
}

.button.button--dark {
  color: #282828;
  border-color: #282828;
}

.button.button--dark:hover {
  color: #fff;
  border-color: transparent;
  background-color: #282828;
}

#svg-sprite {
  display: none;
}

body {
  color: #282828;
}

.content {
  padding-top: 8rem;
}

@media (min-width: 1024px) {
  .content {
    padding-top: 10rem;
  }
}

.container {
  width: 92%;
  margin: 0 auto;
}

@media (min-width: 1024px) {
  .container {
    width: 960px;
  }
}

@media (min-width: 1280px) {
  .container {
    width: 1104px;
  }
}

@media (min-width: 1600px) {
  .container {
    width: 1260px;
  }
}

.page-section {
  padding: 4rem 0;
}

.page-section-title {
  padding-bottom: 1rem;
}

.page-section--2col > .container > div:first-of-type {
  margin-bottom: 4rem;
}

.page-section--2col .page-section__image {
  background: #F0F0F0;
  height: 0;
  padding-bottom: 75%;
}

@media (min-width: 1024px) {
  .page-section {
    padding: 6rem 0 8rem;
  }
  .page-section-title {
    padding-bottom: 3rem;
  }
  .page-section--2col > .container {
    display: grid;
    grid-template: auto / 1fr 1fr;
    grid-column-gap: 3rem;
  }
  .page-section--2col > .container > div:first-of-type {
    margin-bottom: 0;
  }
  .page-section--2col .page-section__image {
    height: 100%;
    padding: 0;
  }
}

.site-header {
  position: fixed;
  width: 100%;
  background-color: #fff;
  z-index: 99999;
  box-shadow: 0 0 10px transparent;
  transition: all 0.2s ease-out;
}

.site-header > .container {
  height: 8rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  transition: height 0.2s ease-out;
}

.site-header.scrolled {
  background-color: #fff !important;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.site-header.scrolled .container {
  height: 6rem;
}

.site-header.scrolled .site-nav__link {
  margin-top: 0;
}

.site-header.scrolled.mobile-open {
  box-shadow: 0 0 10px transparent;
}

.site-nav {
  display: none;
}

.mobile-ham button {
  height: 23px;
  width: 2.5rem;
  outline: none;
  border: none;
  padding: 0;
  margin: 0;
  background: transparent;
}

.mobile-ham button > div {
  position: relative;
  width: 100%;
  height: 3px;
  background-color: #000;
  transition: background-color .2s ease-in-out;
}

.mobile-ham button > div::before {
  position: absolute;
  top: -10px;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #000;
  content: '';
  -webkit-transform: rotate(0);
          transform: rotate(0);
  transition: top .2s ease-in-out, -webkit-transform .2s ease-in-out;
  transition: transform .2s ease-in-out, top .2s ease-in-out;
  transition: transform .2s ease-in-out, top .2s ease-in-out, -webkit-transform .2s ease-in-out;
}

.mobile-ham button > div::after {
  position: absolute;
  bottom: -10px;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: #000;
  content: '';
  -webkit-transform: rotate(0);
          transform: rotate(0);
  transition: bottom .2s ease-in-out, -webkit-transform .2s ease-in-out;
  transition: transform .2s ease-in-out, bottom .2s ease-in-out;
  transition: transform .2s ease-in-out, bottom .2s ease-in-out, -webkit-transform .2s ease-in-out;
}

.mobile-ham.active button > div {
  position: relative;
  width: 100%;
  height: 3px;
  background-color: transparent;
}

.mobile-ham.active button > div::before {
  top: 0px;
  -webkit-transform: rotate(45deg);
          transform: rotate(45deg);
}

.mobile-ham.active button > div::after {
  bottom: 0px;
  -webkit-transform: rotate(-45deg);
          transform: rotate(-45deg);
}

.site-nav__link {
  color: #282828;
  transition: all 0.3s ease-out;
}

.site-nav__link.active {
  border-color: #282828;
}

.mobile-nav {
  background: #fff;
  position: fixed;
  visibility: hidden;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 9999;
  padding-top: 10rem;
  opacity: 0;
  transition: opacity .3s ease-in-out, visibility .3s ease-in-out;
}

.mobile-nav.open {
  opacity: 1;
  visibility: visible;
}

.mobile-nav ul {
  list-style: none;
  padding: 0;
  margin: 0;
}

.mobile-nav li {
  padding: 0;
  margin: 0;
}

.mobile-nav.open li {
  opacity: 0;
  -webkit-animation: mobileNavIn 0.3s ease-out both;
          animation: mobileNavIn 0.3s ease-out both;
}

.mobile-nav.open li:nth-of-type(1) {
  -webkit-animation-delay: 0.125s;
          animation-delay: 0.125s;
}

.mobile-nav.open li:nth-of-type(2) {
  -webkit-animation-delay: 0.15s;
          animation-delay: 0.15s;
}

.mobile-nav.open li:nth-of-type(3) {
  -webkit-animation-delay: 0.175s;
          animation-delay: 0.175s;
}

.mobile-nav.open li:nth-of-type(4) {
  -webkit-animation-delay: 0.2s;
          animation-delay: 0.2s;
}

.mobile-nav.open li:nth-of-type(5) {
  -webkit-animation-delay: 0.225s;
          animation-delay: 0.225s;
}

@-webkit-keyframes mobileNavIn {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-200%);
            transform: translateY(-200%);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

@keyframes mobileNavIn {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-200%);
            transform: translateY(-200%);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

.mobile-nav .site-nav__link {
  font-size: 2rem;
  line-height: 4rem;
  letter-spacing: -0.33px;
  margin-top: 1.35rem;
  margin-bottom: -1.35rem;
}

@media (min-width: 768px) {
  .site-header > .container {
    display: grid;
    grid-template: auto / 1fr 2fr;
    grid-column-gap: 3rem;
    height: 8rem;
    transition: height 0.2s ease-out;
  }
  .site-header.scrolled {
    background-color: #fff !important;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
  .site-header.scrolled .container {
    height: 6rem;
  }
  .site-header.scrolled .site-nav__link {
    margin-top: 0;
  }
  .logo {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
  }
  .site-nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 100%;
  }
  .mobile-ham {
    display: none;
  }
  .mobile-menu {
    display: none;
  }
}

@media (min-width: 1024px) {
  .site-header > .container {
    grid-template: auto / 1fr 1fr;
    height: 10rem;
  }
}

.page-banner {
  position: relative;
  height: auto;
  padding-top: 4rem;
  background: #efefef;
  padding-bottom: 3rem;
  z-index: 1;
}

.page-banner::after {
  content: '';
  position: absolute;
  display: block;
  background: #efefef;
  width: 100%;
  top: 100%;
  height: 17.25rem;
  z-index: -1;
}

.page-description {
  padding-top: 1rem;
}

@media (min-width: 768px) {
  .page-banner::after {
    height: 30rem;
  }
}

@media (min-width: 1024px) {
  .page-banner {
    padding-top: 7rem;
    padding-bottom: 8rem;
    background: #efefef;
  }
  .page-banner::after {
    height: 24rem;
  }
  .page-banner .container {
    display: grid;
    grid-template-rows: auto;
    grid-template-columns: 1fr 1fr;
    grid-column-gap: 3rem;
  }
  .page-description {
    padding-top: 1rem;
  }
}

@media (min-width: 1280px) {
  .page-banner {
    padding-top: 9rem;
  }
}

.hero {
  position: relative;
  width: 100%;
  height: auto;
  z-index: 9;
}

.hero__image {
  width: 100%;
  height: 0;
  padding-bottom: 60%;
  background-color: #F0F0F0;
  background-size: cover;
  background-position: center;
  z-index: -1;
}

.hero__card {
  position: relative;
  z-index: 99;
  color: #fff;
  background-color: #282828;
  transition: all 0.2s ease-out;
}

.hero__card > a {
  display: block;
  color: inherit;
  text-decoration: none;
  height: 100%;
  padding: 1.5rem;
}

.hero__card:hover {
  background-color: #3c3c3c;
}

.hero__card:hover .hero__cta {
  -webkit-transform: translateX(0.5rem);
          transform: translateX(0.5rem);
}

.hero__card .hero__cta {
  padding: 1rem 0;
  transition: all 0.2s ease-out;
}

@media (min-width: 1024px) {
  .hero {
    height: 42rem;
    grid-column: 1/-1;
  }
  .hero__image {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    height: auto;
    width: auto;
    padding: 0;
  }
}

/* stylelint-disable */
.site-footer {
  padding: 3rem 0;
  background: #282828;
}

.footer__copyright {
  color: gray;
  border-top: 1px solid #535353;
  margin-top: 0;
}

.site-credit {
  display: block;
  padding-top: 1rem;
}

.site-credit > a {
  color: inherit;
  transition: all .2s;
}

.site-credit > a:hover {
  color: #fff;
}

.footer__nav {
  display: flex;
  flex-flow: row wrap;
  width: 100%;
  padding-bottom: 3rem;
}

.footer__nav > a {
  width: calc(50% - 1rem);
  padding: 1rem 0 1rem;
  font-size: 1.333rem;
  line-height: 2rem;
  margin-top: 0.56678rem;
  margin-bottom: -0.56678rem;
}

.footer__nav > a:nth-child(1) {
  order: 1;
}

.footer__nav > a:nth-child(4) {
  order: 2;
  margin-left: 2rem;
}

.footer__nav > a:nth-child(2) {
  order: 3;
}

.footer__nav > a:nth-child(5) {
  order: 4;
  margin-left: 2rem;
}

.footer__nav > a:nth-child(3) {
  order: 5;
}

.footer__nav > a:nth-child(6) {
  order: 6;
  margin-left: 2rem;
}

.footer__extra {
  display: flex;
  flex-flow: column nowrap;
}

.footer__extra .button {
  order: 2;
  font-size: 1.333rem;
  line-height: 1;
  margin-top: calc(1rem + 1px);
}

.footer__social-links {
  order: 1;
  padding-bottom: 2rem;
}

.footer__social-links > a {
  margin-right: 2.5rem;
  text-decoration: none;
  opacity: 1;
  transition: opacity 0.2s;
}

.footer__social-links > a > svg {
  -webkit-transform: scale(1.3);
          transform: scale(1.3);
}

.footer__social-links > a:hover {
  opacity: 0.5;
}

.footer__logo {
  text-align: center;
  padding: 5rem 0;
}

.footer__logo svg {
  -webkit-transform: scale(1.2);
          transform: scale(1.2);
}

@media (min-width: 1024px) {
  .site-footer {
    padding: 4rem 0 3rem;
  }
  .site-footer .container {
    display: grid;
    grid-template-rows: auto 1fr;
    grid-template-columns: 1fr 1fr 1fr;
    grid-column-gap: 3rem;
  }
  .footer__copyright {
    grid-column: 1/-1;
  }
  .site-credit {
    float: right;
    padding-top: 0;
  }
  .footer__nav {
    padding-bottom: 6rem;
  }
  .footer__nav > a {
    width: calc(50% - 1.5rem);
  }
  .footer__nav > a:nth-child(4) {
    margin-left: 3rem;
  }
  .footer__nav > a:nth-child(5) {
    margin-left: 3rem;
  }
  .footer__nav > a:nth-child(6) {
    margin-left: 3rem;
  }
  .footer__extra {
    display: block;
  }
  .footer__social-links {
    padding-top: 5rem;
  }
  .footer__social-links > a {
    margin-right: 1rem;
  }
  .footer__social-links > a > svg {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
  .footer__logo {
    text-align: right;
    padding: 1rem 0 0;
  }
  .footer__logo svg {
    -webkit-transform: scale(1);
            transform: scale(1);
  }
}

.footer-sponsors {
  padding: 4rem 0 0;
  background: #282828;
  color: #fff;
}

.footer-sponsors > .container {
  border-bottom: 1px solid #535353;
}

.footer-sponsors a {
  display: none;
}

.footer-sponsors__list {
  clear: both;
  display: grid;
  grid-template: auto / 1fr 1fr;
  grid-gap: 2rem;
  list-style: none;
  padding: 3rem 0;
  margin: 0;
}

.footer-sponsors__list > li {
  height: 0;
  padding-bottom: 100%;
  border: 1px solid #535353;
  border-radius: 50%;
}

.footer-sponsors__list > li:nth-child(5) {
  display: none;
}

@media (min-width: 1280px) {
  .footer-sponsors {
    padding: 6rem 3rem 0 3rem;
  }
  .footer-sponsors h4 {
    float: left;
  }
  .footer-sponsors a {
    display: block;
    float: right;
    font-size: 1.333rem;
    line-height: 2rem;
    margin-top: 0.56678rem;
    margin-bottom: -0.56678rem;
  }
  .footer-sponsors__list {
    clear: both;
    display: grid;
    grid-template: auto / 1fr 1fr 1fr 1fr 1fr;
    grid-column-gap: 6rem;
    padding: 4rem 0 4rem;
  }
  .footer-sponsors__list > li:nth-child(5) {
    display: initial;
  }
}

.panels {
  position: relative;
  padding-bottom: 3rem;
  z-index: 2;
}

.panel {
  padding: 3rem 1.5rem 1.5rem 1.5rem;
  color: #fff;
  background: #282828;
  margin-bottom: 1.5rem;
}

.panel:not(.wide) {
  padding-bottom: 3rem;
}

.panel__secondary {
  margin-top: 4rem;
}

.panel__title + p {
  padding-top: 1rem;
}

.panel__footnote {
  display: block;
  color: gray;
  padding-top: 2rem;
}

.panel__button {
  margin-top: 3rem;
  width: 100%;
}

.panel__list--single {
  list-style: none;
  padding: 0;
  margin: 3rem 0 0 0;
  display: grid;
  grid-template-columns: 1fr;
  grid-column-gap: 1.5rem;
}

.panel__list--single li {
  padding: 1rem 0;
  margin-top: -1px;
  border-top: 1px solid #535353;
  border-bottom: 1px solid #535353;
}

.panel__list--single li > p {
  margin: 0;
}

.panel__image {
  width: 100%;
  height: 0;
  padding-bottom: 75%;
  background-color: #F0F0F0;
  background-size: cover;
  background-position: center;
}

.panel__list {
  list-style: none;
  margin: 0;
  padding: 0;
}

.panel__list-item {
  padding: 1rem 0 2rem;
  border-top: 1px solid rgba(255, 255, 255, 0.2);
}

.panel__list-item > h4 {
  margin-top: 0;
}

.panel__table {
  width: 100%;
  list-style: none;
  margin: 0;
  padding: 0;
}

.panel__table-row {
  padding-top: 1rem;
  padding-bottom: 1rem;
  border-top: 1px solid rgba(255, 255, 255, 0.2);
  overflow: hidden;
  clear: both;
}

.panel__table-row > p {
  padding: 0;
  margin: 0;
}

.panel__table-row > p:nth-child(1) {
  font-weight: bold;
}

@media (min-width: 768px) {
  .panel {
    padding: 3rem;
  }
  .panel__button {
    width: auto;
  }
  .panel__list--single {
    grid-template-columns: 1fr 1fr;
  }
}

@media (min-width: 1024px) {
  .panels > .container {
    display: grid;
    grid-gap: 1.5rem;
    grid-template-columns: 1fr 1fr;
  }
  .panel {
    padding: 3rem;
    margin-bottom: 0;
  }
  .panel.wide {
    grid-column: span 2;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 3rem;
  }
  .panel.wide.swap .panel__primary {
    order: 2;
  }
  .panel.wide.swap .panel__secondary {
    order: 1;
  }
  .panel__title + p {
    padding-top: 3rem;
  }
  .panel__secondary {
    margin-top: 0;
  }
  .panel__image {
    height: 100%;
    padding: 0;
  }
  .panel__table-row:last-of-type {
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
  }
  .panel__table-row > p:nth-child(1) {
    font-weight: 400;
    float: left;
  }
  .panel__table-row > p:nth-child(2) {
    float: right;
  }
}

.programs-page .site-nav__link.active {
  border-color: #7AC8F5;
}

.programs-page .page-banner {
  background-color: #7AC8F5;
}

.programs-page .page-banner::after {
  background-color: #7AC8F5;
}

.other-program {
  padding-bottom: 3rem;
  background-color: #7AC8F5;
}

.other-program .button {
  margin-top: 3rem;
}

@media (min-width: 1024px) {
  .other-program {
    padding-bottom: 8rem;
  }
  .other-program .button {
    margin-top: 4rem;
  }
}

.support-page .site-nav__link.active {
  border-color: #ea8880;
}

.support-page .page-banner {
  background-color: #ea8880;
}

.support-page .page-banner::after {
  background-color: #ea8880;
}

.support-page .footer-sponsors--preview {
  display: none;
}

.support-page .footer-sponsors {
  background-color: #ea8880;
  color: #282828;
}

.support-page .footer-sponsors > .container {
  border-bottom: none;
}

.support-page .footer-sponsors__list {
  border-bottom: 1px solid #282828;
}

.support-page .footer-sponsors__small-list {
  display: grid;
  grid-template-rows: auto;
  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
  grid-column-gap: 3rem;
  list-style: none;
  padding: 0 0 6rem 0;
  margin: 0;
}

.support-page .footer-sponsors__small-list > li {
  font-size: 1.333rem;
  line-height: 2rem;
  margin-top: 0.56678rem;
  margin-bottom: -0.56678rem;
}

.about-page .site-nav__link.active {
  border-color: #E0AE87;
}

.about-page .page-banner {
  background-color: #E0AE87;
}

.about-page .page-banner::after {
  height: 12rem;
  background-color: #E0AE87;
}

.about-us {
  padding-bottom: 6rem;
}

.about-us__intro {
  font-weight: 400;
  line-height: 2.5rem;
  padding-top: 2rem;
  padding-bottom: 1rem;
}

.our-programs {
  background-color: #F0F0F0;
  padding-bottom: 6rem;
}

.programs__link-list {
  list-style: none;
  padding: 0;
  margin: 0;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 1.5rem;
}

.programs__link-list a {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 100%;
  display: block;
  border: 1px solid #282828;
  border-radius: 50%;
  text-align: center;
  background-color: transparent;
  transition: all .2s;
}

.programs__link-list a:hover {
  background-color: #282828;
}

.programs__link-list a:hover span {
  color: #fff;
}

.programs__link-list a span {
  position: absolute;
  top: 55%;
  left: 0;
  right: 0;
  display: block;
  -webkit-transform: translateY(-50%) scale(0.9);
          transform: translateY(-50%) scale(0.9);
  text-decoration: none;
  color: #282828;
  transition: all .2s;
}

.cta {
  background-color: #E0AE87;
  padding: 3rem 0;
}

.cta__copy {
  display: inline;
}

.cta__link {
  display: inline-block;
  font-family: "Work Sans", Helvetica, Arial, sans-serif;
  font-weight: 400;
  -webkit-transform: translateX(0);
          transform: translateX(0);
  transition: -webkit-transform .3s ease-out;
  transition: transform .3s ease-out;
  transition: transform .3s ease-out, -webkit-transform .3s ease-out;
  border-bottom: 1px solid #a8a8a8;
}

.cta__link:hover {
  color: #282828;
  -webkit-transform: translateX(1rem);
          transform: translateX(1rem);
}

.our-history {
  background: #282828;
  color: #fff;
}

.hcaef-stats {
  list-style: none;
  padding: 0;
  margin: 0;
  margin-top: 6rem;
}

.hcaef-stat {
  padding: 4rem 0 2rem;
  border-top: 1px solid #535353;
  display: grid;
  grid-template: auto / 2fr 1fr;
  grid-gap: 1rem;
}

.hcaef-stat:last-child {
  border-bottom: 1px solid #535353;
}

.hcaef-stat__num {
  text-align: right;
  font-family: "Work Sans", Helvetica, Arial, sans-serif;
  font-size: 8rem;
  line-height: 6rem;
  letter-spacing: -1px;
  padding-top: 0;
}

.hcaef-stat__copy {
  margin-top: 3px;
}

.historical-highlights {
  padding-top: 8rem;
}

.historical-highlight {
  margin-top: 1rem;
  margin-bottom: 4rem;
}

.historical-highlight__image {
  width: 100%;
  height: 0;
  padding-bottom: 60%;
  background-color: #F0F0F0;
  background-size: cover;
  background-position: center;
}

.contact {
  background-color: #E0AE87;
}

.board-members {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-column-gap: 1.5rem;
  list-style: none;
  padding: 0;
  padding-top: 2rem;
  padding-bottom: 2rem;
  margin: 0;
}

.board-member {
  text-align: center;
  margin-bottom: 3rem;
}

.board-member__image {
  width: 100%;
  height: 0;
  padding-bottom: 100%;
  border-radius: 50%;
  background-color: #F0F0F0;
  margin-bottom: 2rem;
  background-size: cover;
  background-position: center;
}

.other-contact-info {
  position: relative;
  border-top: 1px solid rgba(0, 0, 0, 0.2);
}

.other-members {
  list-style: none;
  padding: 0;
  margin: 2rem 0 4rem;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: 1.5rem;
}

.other-members + p {
  border-top: 1px solid rgba(0, 0, 0, 0.2);
  padding-top: 2rem;
}

.hcaef-contact-info {
  font-style: normal;
  padding-top: 2rem;
}

@media (min-width: 768px) {
  .about-page .page-banner::after {
    height: 24rem;
  }
  .programs__link-list {
    grid-template-columns: 1fr 1fr 1fr 1fr;
  }
  .hcaef-stat {
    grid-template: auto / 4fr 1fr;
  }
  .historical-highlights {
    display: grid;
    grid-template: auto auto / 1fr 1fr;
    grid-column-gap: 3rem;
  }
  .historical-highlights > h3 {
    grid-column: 1 / span 2;
  }
  .board-members {
    grid-template-columns: 1fr 1fr 1fr;
    grid-column-gap: 3rem;
  }
}

@media (min-width: 1024px) {
  .about-us {
    padding-bottom: 6rem;
  }
  .about-us > .container {
    display: grid;
    grid-template-rows: auto auto;
    grid-template-columns: 1fr 1fr;
    grid-gap: 3rem;
  }
  .about-us__intro {
    padding-top: 0;
  }
  .programs__link-list {
    grid-template-columns: 1fr 1fr 1fr;
  }
  .programs__link-list li:nth-child(4) {
    display: none;
  }
  .our-history {
    padding-bottom: 8rem;
  }
  .our-history .container {
    display: grid;
    grid-template-rows: auto;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    grid-column-gap: 3rem;
  }
  .our-history .container.historical-highlights {
    grid-template-columns: 1fr 1fr;
  }
  .our-history__copy {
    grid-column: 1 / span 4;
  }
  .hcaef-stats {
    margin-top: 7rem;
    grid-column: 5 / span 4;
  }
  .hcaef-stat {
    grid-template: auto / 3fr 1fr;
  }
  .contact {
    background-color: #E0AE87;
  }
  .contact .container {
    display: grid;
    grid-template-rows: auto auto;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr 1fr;
    grid-column-gap: 3rem;
  }
  .contact .page-section-title {
    grid-column: 1/-1;
  }
  .board-members {
    grid-column: 1/9;
    display: grid;
    grid-template-rows: auto auto;
    grid-template-columns: 1fr 1fr 1fr;
    grid-column-gap: 3rem;
    list-style: none;
    padding: 0;
    padding-top: 3rem;
    padding-bottom: 3rem;
    margin: 0;
  }
  .board-member {
    text-align: center;
    margin-bottom: 3rem;
  }
  .board-member__image {
    width: 100%;
    height: 0;
    padding-bottom: 100%;
    border-radius: 50%;
    background-color: #F0F0F0;
    margin-bottom: 2rem;
    background-size: cover;
    background-position: center;
  }
  .other-contact-info {
    grid-column: 10/13;
    position: relative;
  }
  .other-contact-info::before {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: -1.5rem;
    width: 1px;
    background-color: rgba(0, 0, 0, 0.2);
    display: block;
    mix-blend-mode: multiply;
  }
  .other-members {
    list-style: none;
    padding: 0;
    margin: 3rem 0 12rem 0;
  }
  .other-members li {
    margin-bottom: 2rem;
  }
  .hcaef-contact-info {
    font-style: normal;
    padding-top: 2rem;
  }
}

@media (min-width: 1280px) {
  .our-programs {
    background-color: #F0F0F0;
    padding-bottom: 8rem;
  }
  .our-programs .container {
    display: grid;
    grid-template-rows: auto auto;
    grid-template-columns: 1fr 1fr;
    grid-column-gap: 3rem;
  }
  .programs__link-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    grid-template-rows: auto;
    grid-template-columns: 1fr 1fr 1fr;
    grid-column-gap: 1.5rem;
  }
  .programs__link-list li:nth-child(4) {
    display: none;
  }
  .programs__link-list a {
    position: relative;
    width: 100%;
    height: 0;
    padding-bottom: 100%;
    margin-top: 4rem;
    display: block;
    border: 1px solid #282828;
    border-radius: 50%;
    text-align: center;
    background-color: transparent;
    transition: all .2s;
  }
  .programs__link-list a:hover {
    background-color: #282828;
  }
  .programs__link-list a:hover span {
    color: #fff;
  }
  .programs__link-list a span {
    position: absolute;
    top: 50%;
    left: 5%;
    right: 5%;
    display: block;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    text-decoration: none;
    color: #282828;
    transition: all .2s;
  }
  .hcaef-stats {
    margin-top: 6rem;
    grid-column: 6 / span 3;
  }
}

.front-page .site-header {
  background-color: #94DFBA;
}

.page-banner--front {
  background-color: #94DFBA;
  padding-top: 0;
}

.page-banner--front::after, .page-banner--front::before {
  background-color: #94DFBA;
}

.page-banner--front::before {
  position: absolute;
  content: '';
  display: block;
  width: 100%;
  bottom: 100%;
  height: 10rem;
}

.page-banner--front > .container {
  overflow: hidden;
}

.page-banner--front .page-title {
  padding-top: 3rem;
  font-size: 3rem;
  line-height: 3rem;
  margin-top: 0.525rem;
  margin-bottom: -0.525rem;
  padding-bottom: 3rem;
}

.page-banner--front .donate-badge {
  display: none;
  position: relative;
  grid-column: 6/7;
  border-radius: 50%;
  height: 0;
  padding-bottom: 100%;
  background-color: #282828;
  border: 1px solid #282828;
  text-align: center;
  margin-top: 5rem;
}

.page-banner--front .donate-badge:hover {
  background-color: #3c3c3c;
}

.page-banner--front .donate-badge span {
  position: absolute;
  top: 50%;
  width: 100%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
  text-decoration: none;
  display: block;
  color: #fff;
}

.front-page .news-events {
  padding-bottom: 3rem;
}

.front-page .news-events .hero {
  margin-bottom: 4rem;
}

.front-page-news .page-section-title,
.front-page-events .page-section-title {
  padding-bottom: 2rem;
}

.front-page-news .see-all,
.front-page-events .see-all {
  float: right;
}

.front-page-news {
  padding-bottom: 3rem;
}

.front-page-news .news-cards {
  display: block;
  padding: 0;
}

.front-page-events .event-cards {
  padding-top: 1rem;
  padding-bottom: 0;
  border-top: 1px solid #cccccc;
}

.event-card--front-page .event-card__link {
  min-height: auto;
}

.event-card--front-page.with-image .event-card__link {
  grid-gap: 1rem;
}

.event-card--front-page.with-image .event-card__image {
  margin-bottom: 0rem;
}

.support-the-foundation {
  background-color: #E0AE87;
}

.front-page-support-buttons {
  display: grid;
  grid-template: auto auto / 1fr 1fr;
  grid-gap: 1rem;
  list-style: none;
  padding: 0;
  margin: 3rem 0 0 0;
}

.front-page-support-buttons > li > a {
  display: block;
  height: 100%;
}

@media (min-width: 768px) {
  .news-card.news-card--front-page {
    padding: 1rem 0;
    border-top: 1px solid #cccccc;
  }
  .news-card.news-card--front-page::before {
    display: none !important;
  }
  .news-card.news-card--front-page::after {
    display: none !important;
  }
  .news-card.news-card--front-page.with-image .news-card__link {
    display: grid;
    grid-template-columns: 1fr 2fr;
    grid-gap: 1.5rem;
  }
  .news-card.news-card--front-page.with-image .news-card__image {
    height: 0;
    padding-bottom: 100%;
    margin: 0;
  }
  .news-card.news-card--front-page .news-card__hed {
    font-size: 2rem;
    line-height: 2rem;
    margin-top: 0.35rem;
    margin-bottom: -0.35rem;
  }
}

@media (min-width: 1024px) {
  .page-banner--front {
    background-color: #94DFBA;
    padding-top: 0;
    padding-bottom: 4rem;
  }
  .page-banner--front .container {
    display: grid;
    grid-template-rows: auto;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
    grid-column-gap: 3rem;
  }
  .page-banner--front .container div {
    grid-column: 1/5;
  }
  .page-banner--front .container > a {
    display: block;
    position: relative;
    grid-column: 6/7;
    border-radius: 50%;
    height: 0;
    padding-bottom: 100%;
    background-color: #282828;
    border: 1px solid #282828;
    text-align: center;
    margin-top: 5rem;
  }
  .page-banner--front .container > a:hover {
    background-color: #3c3c3c;
  }
  .page-banner--front .container > a span {
    position: absolute;
    top: 50%;
    width: 100%;
    -webkit-transform: translateY(-50%);
            transform: translateY(-50%);
    text-decoration: none;
    display: block;
    color: #fff;
  }
  .page-banner--front .page-title {
    padding-top: 6rem;
    font-size: 4rem;
    line-height: 4rem;
    margin-top: 0.7rem;
    margin-bottom: -0.7rem;
    padding-bottom: 3rem;
  }
  .front-page .news-events {
    padding-bottom: 6rem;
  }
  .front-page .news-events .container {
    display: grid;
    grid-template: auto auto / 1fr 1fr;
    grid-column-gap: 3rem;
  }
  .front-page .news-events .hero {
    margin-bottom: 5rem;
  }
  .front-page-news .page-section-title,
  .front-page-events .page-section-title {
    padding-bottom: 3rem;
  }
  .news-card.news-card--front-page {
    padding: 1rem 0;
  }
  .front-page-events .event-cards {
    display: grid;
    grid-template: auto auto / 1fr 1fr;
    grid-gap: 1rem;
  }
  .event-card.event-card--front-page .event-card__link {
    min-height: 24rem;
  }
  .event-card.event-card--front-page.with-image > .event-card__link {
    grid-gap: 1.5rem;
  }
  .event-card.event-card--front-page.with-image .event-card__image {
    padding-bottom: 0;
    height: 100%;
  }
  .support-the-foundation {
    background-color: #E0AE87;
  }
  .front-page-support-buttons {
    display: grid;
    grid-template: auto auto / 1fr 1fr;
    grid-gap: 1rem;
    list-style: none;
    padding: 0;
    margin: 3rem 0 0 0;
  }
  .front-page-support-buttons > li > a {
    display: block;
    height: 100%;
  }
}

@media (min-width: 1600px) {
  .event-card.event-card--front-page .event-card__link {
    min-height: 26.5rem;
  }
}

.events-page .site-nav__link.active {
  border-color: #94DFBA;
}

.events-page .page-banner {
  background-color: #94DFBA;
}

.events-page .page-banner::after {
  background-color: #94DFBA;
}

.archive--events {
  background-color: #94DFBA;
}

.event-cards {
  padding: 1.5rem 0 3rem;
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 1.5rem;
}

.event-card {
  background-color: #282828;
  color: #fff;
  transition: all 0.2s ease-out;
}

.event-card:hover {
  background-color: #3c3c3c;
}

.event-card:hover .event-card__cta {
  -webkit-transform: translateX(0.5rem);
          transform: translateX(0.5rem);
}

.event-card__link {
  display: grid;
  min-height: 24rem;
  padding: 1.5rem;
  color: inherit;
  text-decoration: none;
}

.event-card__image {
  order: 1;
  margin-bottom: 2rem;
  height: 0;
  padding-bottom: 80%;
  background: #F0F0F0;
  background-size: cover;
  background-position: center;
}

.event-card__copy {
  order: 2;
  min-height: 21rem;
  display: grid;
  grid-template: 1fr 1fr / auto;
}

.event-card__info {
  display: flex;
  flex-flow: row wrap;
  border-top: 1px solid #535353;
}

.event-card__info > p {
  width: 100%;
  padding-bottom: 0;
}

.event-card__info > .event-card__cta {
  padding-bottom: 1rem;
  display: block;
  align-self: flex-end;
  transition: -webkit-transform .3s ease-out;
  transition: transform .3s ease-out;
  transition: transform .3s ease-out, -webkit-transform .3s ease-out;
}

@media (min-width: 768px) {
  .event-cards {
    grid-template-columns: 1fr 1fr;
  }
  .event-card.with-image {
    grid-column: span 2;
  }
  .event-card.with-image > .event-card__link {
    grid-template-columns: 1fr 1fr;
    grid-gap: 1rem;
  }
  .event-card__image {
    margin: 0;
  }
  .event-card__image,
  .event-card__copy {
    order: initial;
  }
}

@media (min-width: 1024px) {
  .hero__card.event-card {
    position: absolute;
    top: 3rem;
    right: 3rem;
    bottom: 3rem;
    left: calc(66.667% + 0.75rem);
  }
  .hero__card.event-card > .event-card__link {
    height: 100%;
  }
  .event-cards {
    grid-template: auto auto / 1fr 1fr 1fr;
  }
  .event-card__link {
    min-height: 32rem;
  }
  .event-card__image {
    grid-column: 2/3;
  }
  .event-card__copy {
    min-height: auto;
  }
}

.news-page .site-nav__link.active {
  border-color: #FCBD31;
}

.news-page .page-banner {
  background-color: #FCBD31;
}

.news-page .page-banner::after {
  background-color: #FCBD31;
}

.hero--news .category {
  margin-top: 0;
  text-transform: uppercase;
  text-decoration: underline;
}

.hero--news h3 + p {
  padding-top: 1rem;
}

.hero--news .hero__cta {
  padding: 2rem 0 1rem;
}

.news-cards {
  padding: 1rem 0;
}

.news-card {
  position: relative;
  padding: 1rem 0 2rem;
  border-top: 1px solid #cccccc;
}

.news-card__link {
  display: block;
  color: inherit;
  text-decoration: none;
}

.news-card.with-image .news-card__link {
  display: grid;
  grid-template: auto / 1fr 2fr;
  grid-column-gap: 1.5rem;
}

.news-card__image {
  width: 100%;
  height: 0;
  padding-bottom: 100%;
  background-color: #F0F0F0;
  background-size: cover;
  background-position: center;
  opacity: 1;
  transition: opacity 0.3s ease-out;
}

.news-card:hover .news-card__image {
  opacity: 0.65;
}

.news-card__category {
  text-transform: uppercase;
  text-decoration: underline;
  font-size: 1.333rem;
  display: initial;
  padding: 0;
}

.news-card__hed + .news-card__cta {
  padding-top: 2rem;
}

.news-card:hover .news-card__hed {
  text-decoration: underline;
}

.news-card__dek {
  padding-top: 0.5rem;
}

.news-card__cta {
  -webkit-transform: translateX(0);
          transform: translateX(0);
  transition: all .3s ease-out;
}

.news-card:hover .news-card__cta {
  -webkit-transform: translateX(0.5rem);
          transform: translateX(0.5rem);
}

.archive--news {
  background-color: #FCBD31;
}

@media (min-width: 768px) {
  .news-cards {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-gap: 3rem;
    padding: 3rem 0;
  }
  .news-card {
    border: none;
    padding: 0 0 3rem;
  }
  .news-card::before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    bottom: 0;
    width: 1px;
    background: #cccccc;
    left: -1.5rem;
  }
  .news-card:nth-child(2n+1)::before {
    display: none;
  }
  .news-card:nth-child(2n+1)::after {
    content: '';
    display: block;
    position: absolute;
    top: -1.5rem;
    left: 0;
    width: calc(200% + 3rem);
    height: 1px;
    background: #cccccc;
  }
  .news-card.with-image .news-card__link {
    display: block;
  }
  .news-card__image {
    padding-bottom: 66.67%;
    margin-bottom: 1rem;
  }
}

@media (min-width: 1024px) {
  .hero--news .hero__image {
    left: calc(33.333% - 0.75rem);
  }
  .hero--news .hero__card {
    position: absolute;
    top: 0rem;
    left: 0rem;
    bottom: 0rem;
    right: calc(66.667% + 0.75rem);
  }
  .hero--news .hero__card > a {
    display: flex;
    flex-flow: row wrap;
    height: 100%;
    padding: 1.5rem;
  }
  .hero--news .hero__cta {
    align-self: flex-end;
  }
  .news-cards {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 3rem;
    padding: 3rem 0;
  }
  .news-card:nth-child(2n+1)::before {
    display: block;
  }
  .news-card:nth-child(2n+1)::after {
    display: none;
  }
  .news-card:nth-child(3n+1)::before {
    display: none;
  }
  .news-card:nth-child(3n+1)::after {
    content: '';
    display: block;
    position: absolute;
    top: -1.5rem;
    left: 0;
    width: calc(300% + 6rem);
    height: 1px;
    background: #cccccc;
  }
  .news-card__hed {
    padding-top: 0.5rem;
  }
  .news-card:hover .news-card__hed {
    text-decoration: underline;
  }
  .news-card__category + .news-card__hed {
    padding-top: 0.5rem;
  }
}

.news-page--secondary {
  background-color: #f8f8f8;
}

.article {
  padding-bottom: 4rem;
}

.back-from-article {
  display: inline-block;
  padding-top: 2rem;
}

.article-header {
  display: flex;
  flex-flow: row wrap;
  padding-top: 3rem;
}

.article-hed {
  order: 1;
}

.article-dek {
  order: 2;
  font-weight: 300;
  padding-top: 1rem;
  width: 100%;
}

.article-social-share {
  order: 3;
  padding: 2rem 0 5rem;
}

.article-social-share > a {
  position: relative;
  display: inline-block;
  margin-right: 0.5rem;
  width: 4rem;
  height: 4rem;
  border: 1px solid #282828;
  border-radius: 50%;
  text-align: center;
  transition: opacity 0.2s ease-out;
}

.article-social-share > a > svg {
  display: inline-block;
  position: absolute;
  left: 0;
  width: 100%;
  top: 50%;
  -webkit-transform: translateY(-50%);
          transform: translateY(-50%);
}

.article-social-share > a:hover {
  opacity: 0.6;
}

.article-tags {
  display: none;
  grid-column: 1 / span 3;
  grid-row: 3 / span 1;
  margin: 3rem 0 2rem 0;
  height: 4rem;
}

.article-tags.none {
  height: 0;
}

.article-tag {
  display: inline-block;
  padding: 0.25rem 0.5rem;
  color: #686868;
  border: 1px solid #a8a8a8;
  border-radius: 0.25rem;
  margin-right: 0.5rem;
  text-transform: uppercase;
}

.article-lead-image {
  margin-bottom: 3rem;
}

.article-lead-image img {
  display: block;
  width: 100%;
  min-height: 100px;
  background: #F0F0F0;
  border: none;
  outline: none;
}

.image-caption {
  color: #686868;
  padding-top: 0;
}

.article-byline-date {
  font-weight: bold;
  padding-bottom: 2rem;
}

.article-body h2 {
  padding: 2rem 0 1rem;
}

.related .page-section-title {
  padding-bottom: 1rem;
}

.related {
  padding-bottom: 0;
}

@media (min-width: 1024px) {
  .article {
    padding-bottom: 8rem;
  }
  .article--news > .container {
    display: grid;
    grid-template-columns: 2fr 6fr 1fr;
    grid-column-gap: 3rem;
  }
  .back-from-article {
    padding-top: 4rem;
    grid-column: 1 / span 3;
  }
  .article-header {
    grid-column: 1 / span 3;
    padding-top: 3rem;
    display: grid;
    grid-template: auto auto / 3fr 1fr;
    grid-column-gap: 3rem;
  }
  .article-hed {
    grid-column: 1 / span 1;
    grid-row: 1 / span 1;
  }
  .article-dek {
    grid-column: 1 / span 1;
    grid-row: 2 / span 1;
  }
  .article-social-share {
    grid-column: 3 / span 1;
    grid-row: 1 / span 2;
    text-align: right;
    padding-top: 0.5rem;
  }
  .article-social-share > a {
    margin-left: 1rem;
    margin-right: 0;
  }
  .article-lead-image {
    grid-column: 1 / span 3;
    margin-top: 6rem;
  }
  .related .news-cards {
    display: grid;
    grid-template: auto / 1fr 1fr 1fr;
    grid-column-gap: 3rem;
  }
  .related .page-section-title {
    padding-bottom: 2rem;
  }
  .related {
    padding-bottom: 0;
  }
}

@media (min-width: 1280px) {
  .article--news > .container {
    grid-template-columns: 2fr 7fr 3fr;
  }
  .article-header {
    grid-template-columns: 8fr 1fr 3fr;
  }
  .article-lead-image {
    margin-bottom: 4rem;
  }
}

.events-page--secondary {
  background-color: #f8f8f8;
}

.event-info-sidebar {
  border-top: 1px solid #cccccc;
  margin-top: 4rem;
  padding-top: 1rem;
}

.button--tickets + p {
  padding-top: 2rem;
}

@media (min-width: 768px) {
  .article--event > .container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-column-gap: 3rem;
  }
}

@media (min-width: 768px) and (max-width: 1023px) {
  .article--event .article-header,
  .article--event .article-lead-image {
    grid-column: 1 / span 2;
  }
}

@media (min-width: 768px) {
  .event-info-sidebar {
    position: relative;
    grid-column: 2 / span 1;
    padding-bottom: 2rem;
    border: none;
    margin-top: 0;
    padding-top: 0;
  }
  .event-info-sidebar::before {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 1px;
    content: '';
    background-color: #cccccc;
    left: -1.5rem;
  }
}

@media (min-width: 1024px) {
  .article--event > .container {
    grid-template-columns: 7fr 1fr 4fr;
  }
  .event-info-sidebar {
    grid-column: 3 / span 1;
  }
}

.archive {
  padding: 4rem 0 2rem;
}

.archive-list {
  list-style: none;
  padding: 0;
  margin: 3rem 0 0 0;
}

.archive-item {
  background-color: transparent;
  color: #282828;
  transition: all .3s ease-out;
  mix-blend-mode: multiply;
}

.archive-item:hover {
  background-color: #f4f4f4;
}

.archive-item a {
  display: grid;
  grid-template: auto auto / 1fr 3fr;
  grid-column-gap: 3rem;
  border-top: 1px solid rgba(0, 0, 0, 0.5);
  padding: 0 0 1rem;
  padding-bottom: calc(2rem + 1px);
  text-decoration: none;
  color: inherit;
}

.archive-item__title {
  font-weight: 400;
}

.archive-item__view-details {
  grid-column: 2 / span 1;
  text-align: left;
  -webkit-transform: translateX(0);
          transform: translateX(0);
  transition: -webkit-transform 0.3s ease-out;
  transition: transform 0.3s ease-out;
  transition: transform 0.3s ease-out, -webkit-transform 0.3s ease-out;
}

.archive-item:hover .archive-item__view-details {
  -webkit-transform: translateX(1rem);
          transform: translateX(1rem);
}

@media (min-width: 768px) {
  .archive {
    padding: 6rem 0;
  }
  .archive-list {
    margin: 4rem 0 0 0;
  }
  .archive-item a {
    grid-template: auto / 1fr 2fr 1fr;
    padding: 2rem 0;
  }
  .archive-item__date {
    padding-left: 1rem;
  }
  .archive-item__view-details {
    grid-column: 3 / span 1;
    text-align: right;
    padding-right: 2rem;
  }
}

/* stylelint-enable */
/* stylelint-enable */
/*# sourceMappingURL=data:application/json;base64, */